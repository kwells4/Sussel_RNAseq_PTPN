# Run bbduk to remove adaptors
# Find an example of running bbduk here:
	# https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/bbduk-guide/
# There is an adapter trimming usage example

# Function to return paths of input files
def _get_input(wildcards):
    # Grab path of the fastq file
    fastq1 = SAMPLE_LIST.loc[wildcards.sample, "fastq1"]
    data_dir = SAMPLE_LIST.loc[wildcards.sample, "data_dir"]
    fastq1 = data_dir + "/" + fastq1
    # Make sure file exists
    fastq1  = _check_path(fastq1)
    if IS_PAIRED:
        # Grab path of second read
        fastq2 = SAMPLE_LIST.loc[wildcards.sample, "fastq2"]
        fastq2 = data_dir + "/" + fastq2
        # Make sure file exists
        fastq2 = _check_path(fastq2)
        return(fastq1, fastq2)
    else:
        return(fastq1)



rule bbduk:
    input:
    	input_list = _get_input
    output:
    	"{results}/logs/{sample}_bbduk.txt"
    params:
    	ref      = ADAPTORS,
    	opts     = CMD_PARAMS["bbduk"],
    	fastq1   = "{results}/bbduk/{sample}_R1_bbduk_trimmed.fastq",
    	fastq2   = "{results}/bbduk/{sample}_R2_bbduk_trimmed.fastq",
    	job_name = "{sample}_bbduk",
        memory   = "select[mem>4] rusage[mem=4]"
    log:
    	"{results}/logs/{sample}_bbduk"
    run:
    	if IS_PAIRED:
    		shell(
		        '''
		        bbduk.sh \
		        in1   = {input.input_list[0]} \
		        in2   = {input.input_list[1]} \
		        out1  = {output.fastq1} \
		        out2  = {output.fastq2} \
		        ref   = {params.ref} \
		        {params.opts}
		        '''
    		)
    	else:
    		shell(
    			'''
    			bbduk.sh \
		        in1   = {input.input_list[0]} \
		        out1  = {output.fastq1} \
		        ref   = {params.ref} \
		        {params.opts}
		        '''
    		)
    	with open(output[0]) as out:
    		out.write("done/n")


rule no_trim:
    input:
        input_list = _get_input
    ouput:
        "{results}/logs/{sample}_none.txt"
    run:
        with open({output}) as out:
            out.write("No trimming done on these samples\n")

