# This runs star on the files from the samples document can be single or paired end

# Function to return paths of input files
def _get_input(wildcards):
    # Grab path of the fastq file
    fastq1 = SAMPLE_LIST.loc[wildcards.sample, "fastq1"]
    data_dir = SAMPLE_LIST.loc[wildcards.sample, "data_dir"]
    fastq1 = data_dir + "/" + fastq1
    # Make sure file exists
    fastq1  = _check_path(fastq1)
    if IS_PAIRED:
        # Grab path of second read
        fastq2 = SAMPLE_LIST.loc[wildcards.sample, "fastq2"]
        fastq2 = data_dir + "/" + fastq2
        # Make sure file exists
        fastq2 = _check_path(fastq2)
        return(fastq1, fastq2)
    else:
        return(fastq1)

def _get_input_star(wildcards):
    # Grab path of the fastq file
    fastq1 = (wildcards.results + "/" + wildcards.trim_method + "/" + wildcards.sample +
        "_R1_" + wildcards.trim_method + "_trimmed.fastq")
    # Make sure file exists
    if wildcards.trim_method != "no":
        fastq1  = _check_path(fastq1)
    if IS_PAIRED:
        # Grab path of second read
        fastq2 = (wildcards.results + "/" + wildcards.trim_method + "/" + wildcards.sample +
            "_R2_" + wildcards.trim_method + "_trimmed.fastq")
        # Make sure file exists
        if wildcards.trim_method != "no":
            fastq2 = _check_path(fastq2)
        return(fastq1, fastq2)
    else:
        return(fastq1)

rule align:
    input:
        "{results}/logs/{trim_method}_trim_{sample}.txt"
    output:
        "{results}/star_{trim_method}/{sample}_Aligned.sortedByCoord.out.bam"
    params:
        job_name      = "{sample}_star",
        memory        = "select[mem>60] rusage[mem=60]",
        genome        = GENOME,
        gtf           = GTF,
        output_prefix = "{results}/star_{trim_method}/{sample}_",
        fastqs_trim   = _get_input_star,
        fastqs        = _get_input,
        trim_method   = "{trim_method}"
    log:
        "{results}/logs/star_{sample}_{trim_method}"
    message:
        "Aligning reads for {wildcards.sample}"
    threads:
        6
    run:
        if trim_method == "no":
            shell(    
                """
                module load STAR/2.5.2a
                STAR \
                --runThreadN {threads} \
                --genomeDir {params.genome} \
                --sjdbGTFfile {params.gtf} \
                --readFilesIn {params.fastqs} \
                --readFilesCommand zcat \
                --outSAMtype BAM SortedByCoordinate \
                --outFileNamePrefix {params.output_prefix}
                """
            )
        else:
            shell(    
                """
                module load STAR/2.5.2a
                STAR \
                --runThreadN {threads} \
                --genomeDir {params.genome} \
                --sjdbGTFfile {params.gtf} \
                --readFilesIn {params.fastqs_trim} \
                --readFilesCommand zcat \
                --outSAMtype BAM SortedByCoordinate \
                --outFileNamePrefix {params.output_prefix}
                """
            )