# This runs featureCounts and makes a count table based on the output
rule count:
    input:
        expand(
            "{results}/star_{trim_method}/{sample}_Aligned.sortedByCoord.out.bam",
            sample = SAMPLES, trim_method = TRIM_METHOD, results = RESULTS
        )    
    output:
        "{results}/featureCount_{trim_method}/{sample}_countsOutput"
    params:
        job_name = "counts",
        memory = "select[mem>8] rusage[mem=8]",
        gtf=GTF,
        output_file="countsOutput",
        opts = CMD_PARAMS["featureCounts"]
    log:
        "{results}/logs/featureCounts_{sample}_{trim_method}"
    shell:
        """
        featureCounts \
        {params.opts} \
        -a {params.gtf} \
        -o {output} \
		"""

rule count_table:
    input:
        expand(
            "{results}/featureCount_{trim_method}/{sample}_countsOutput",
            sample=SAMPLE_LIST, trim_method = TRIM_METHOD, results = RESULTS
        )
    output:
        "{results}/{project}_countTable.txt"
    script:
        "scripts/countTable.py"